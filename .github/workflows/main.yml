name: CI-CD-Pipeline-to-AWS-Elastic-Beanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "zzz.flask-app" 
  EB_APPLICATION_NAME       : "MyFlask" 
  EB_ENVIRONMENT_NAME       : "Myflask-env"
  DEPLOY_PACKAGE_NAME       : "flask-app-${{github.sha}}.zip" 
  AWS_REGION_NAME           : "us-west-2"

on:
  push:
    branches: 
      - master
        
jobs:
  my_ci_pipeline:
    
    runs-on: [ubuntu-latest]
    steps:
      - name: Git clone rrepo
        uses: actions/checkout@v1
      
      - name: Create zip deployment file
        run: zip -r ${{env.DEPLOY_PACKAGE_NAME}} ./ -x *.git*
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id     : ${{secrets.MY_AWS_ACCESS_KEY}}
          aws-secret-access-key : ${{secrets.MY_AWS_SECRET_KEY}}
          aws-region            : ${{env.AWS_REGION_NAME}}
      
      - name :  Copy deployment package to S3 bucket
        run  :  aws s3 cp ${{env.DEPLOY_PACKAGE_NAME}} s3://${{env.EB_PACKAGE_S3_BUCKET_NAME}}/
      
      - name :  Print success message of deliver
        run  :  echo "CI pipeline is working"
        
  my_cd_pipeline:
    runs-on: [ubuntu-latest]
    needs  : [my_ci_pipeline]
    steps  :
            - name: Configure AWS cred 
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id     : ${{secrets.MY_AWS_ACCESS_KEY}}
                aws-secret-access-key : ${{secrets.MY_AWS_SECRET_KEY}}
                aws-region            : ${{env.AWS_REGION_NAME}} 
            
            - name: Create new ELB application verison
              run : 
                aws elasticbeanstalk create-application-version \
                --application-name ${{env.EB_APPLICATION_NAME}} \
                --source-bundle S3Bucket="${{env.EB_PACKAGE_S3_BUCKET_NAME}}",S3Key="${{env.DEPLOY_PACKAGE_NAME}}" \
                --version-label "Ver-${{github.sha}}" \
                --description "CommitSHA-${{github.sha}}"
            
            - name: Deploy new version on ELB
              run : aws elasticbeanstalk update-environment --environment-name ${{env.EB_ENVIRONMENT_NAME}} --version-label "Ver-${{github.sha}}"
              
            - name : Delivery status
              run  : echo "CD was successfully" 
             
             
             
             
             
             
             
             
